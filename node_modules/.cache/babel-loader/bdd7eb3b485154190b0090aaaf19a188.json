{"ast":null,"code":"import { v1 } from 'uuid';\nexport const todolistsReducer = (state, action) => {\n  switch (action.type) {\n    case 'REMOVE-TODOLIST':\n      return state.filter(tl => tl.id != action.id);\n\n    case 'ADD-TODOLIST':\n      return [...state, {\n        id: action.todolistId,\n        title: action.title,\n        filter: \"all\"\n      }];\n\n    case 'CHANGE-TODOLIST-TITLE':\n      {\n        const todolist = state.find(tl => tl.id === action.id);\n\n        if (todolist) {\n          // если нашёлся - изменим ему заголовок\n          todolist.title = action.title;\n        }\n\n        return [...state];\n      }\n\n    case 'CHANGE-TODOLIST-FILTER':\n      {\n        const todolist = state.find(tl => tl.id === action.id);\n\n        if (todolist) {\n          // если нашёлся - изменим ему заголовок\n          todolist.filter = action.filter;\n        }\n\n        return [...state];\n      }\n\n    default:\n      throw new Error(\"I don't understand this type\");\n  }\n};\nexport const removeTodolistAC = todolistId => {\n  return {\n    type: 'REMOVE-TODOLIST',\n    id: todolistId\n  };\n};\nexport const addTodolistAC = title => {\n  return {\n    type: 'ADD-TODOLIST',\n    title,\n    todolistId: v1()\n  };\n};\nexport const changeTodolistTitleAC = (todolistId, title) => {\n  return {\n    type: 'CHANGE-TODOLIST-TITLE',\n    title: title,\n    id: todolistId\n  };\n};\nexport const changeTodolistFilterAC = (todolistId, filter) => {\n  return {\n    type: 'CHANGE-TODOLIST-FILTER',\n    filter: filter,\n    id: todolistId\n  };\n};","map":{"version":3,"sources":["D:/IT-incubator/TODO среда переход на редакс/src/state/todolists-reducer.ts"],"names":["v1","todolistsReducer","state","action","type","filter","tl","id","todolistId","title","todolist","find","Error","removeTodolistAC","addTodolistAC","changeTodolistTitleAC","changeTodolistFilterAC"],"mappings":"AACA,SAAQA,EAAR,QAAiB,MAAjB;AAwBA,OAAO,MAAMC,gBAAgB,GAAG,CAACC,KAAD,EAA6BC,MAA7B,KAA0E;AACtG,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,iBAAL;AACI,aAAOF,KAAK,CAACG,MAAN,CAAaC,EAAE,IAAIA,EAAE,CAACC,EAAH,IAASJ,MAAM,CAACI,EAAnC,CAAP;;AACJ,SAAK,cAAL;AACI,aAAO,CAAC,GAAGL,KAAJ,EAAW;AAACK,QAAAA,EAAE,EAAEJ,MAAM,CAACK,UAAZ;AAAwBC,QAAAA,KAAK,EAAEN,MAAM,CAACM,KAAtC;AAA6CJ,QAAAA,MAAM,EAAE;AAArD,OAAX,CAAP;;AACJ,SAAK,uBAAL;AAA8B;AAC1B,cAAMK,QAAQ,GAAGR,KAAK,CAACS,IAAN,CAAWL,EAAE,IAAIA,EAAE,CAACC,EAAH,KAAUJ,MAAM,CAACI,EAAlC,CAAjB;;AACA,YAAIG,QAAJ,EAAc;AACV;AACAA,UAAAA,QAAQ,CAACD,KAAT,GAAiBN,MAAM,CAACM,KAAxB;AACH;;AACD,eAAO,CAAC,GAAGP,KAAJ,CAAP;AACH;;AACD,SAAK,wBAAL;AAA+B;AAC3B,cAAMQ,QAAQ,GAAGR,KAAK,CAACS,IAAN,CAAWL,EAAE,IAAIA,EAAE,CAACC,EAAH,KAAUJ,MAAM,CAACI,EAAlC,CAAjB;;AACA,YAAIG,QAAJ,EAAc;AACV;AACAA,UAAAA,QAAQ,CAACL,MAAT,GAAkBF,MAAM,CAACE,MAAzB;AACH;;AACD,eAAO,CAAC,GAAGH,KAAJ,CAAP;AACH;;AACD;AACI,YAAM,IAAIU,KAAJ,CAAU,8BAAV,CAAN;AAtBR;AAwBH,CAzBM;AA2BP,OAAO,MAAMC,gBAAgB,GAAIL,UAAD,IAAkD;AAC9E,SAAO;AAAEJ,IAAAA,IAAI,EAAE,iBAAR;AAA2BG,IAAAA,EAAE,EAAEC;AAA/B,GAAP;AACH,CAFM;AAGP,OAAO,MAAMM,aAAa,GAAIL,KAAD,IAA0C;AACnE,SAAO;AAAEL,IAAAA,IAAI,EAAE,cAAR;AAAwBK,IAAAA,KAAxB;AAA+BD,IAAAA,UAAU,EAAER,EAAE;AAA7C,GAAP;AACH,CAFM;AAGP,OAAO,MAAMe,qBAAqB,GAAG,CAACP,UAAD,EAAqBC,KAArB,KAAuE;AACxG,SAAO;AAAEL,IAAAA,IAAI,EAAE,uBAAR;AAAiCK,IAAAA,KAAK,EAAEA,KAAxC;AAA+CF,IAAAA,EAAE,EAAEC;AAAnD,GAAP;AACH,CAFM;AAGP,OAAO,MAAMQ,sBAAsB,GAAG,CAACR,UAAD,EAAqBH,MAArB,KAAkF;AACpH,SAAO;AAAED,IAAAA,IAAI,EAAE,wBAAR;AAAkCC,IAAAA,MAAM,EAAEA,MAA1C;AAAkDE,IAAAA,EAAE,EAAEC;AAAtD,GAAP;AACH,CAFM","sourcesContent":["import {FilterValuesType, TodolistType} from '../App';\r\nimport {v1} from 'uuid';\r\n\r\nexport type RemoveTodolistActionType = {\r\n    type: 'REMOVE-TODOLIST'\r\n    id: string\r\n}\r\nexport type AddTodolistActionType = {\r\n    type: 'ADD-TODOLIST'\r\n    title: string\r\n    todolistId: string\r\n}\r\nexport type ChangeTodolistTitleActionType = {\r\n    type: 'CHANGE-TODOLIST-TITLE'\r\n    id: string\r\n    title: string\r\n}\r\nexport type ChangeTodolistFilterActionType = {\r\n    type: 'CHANGE-TODOLIST-FILTER'\r\n    id: string\r\n    filter: FilterValuesType\r\n}\r\n\r\ntype ActionsType = RemoveTodolistActionType | AddTodolistActionType | ChangeTodolistTitleActionType | ChangeTodolistFilterActionType;\r\n\r\nexport const todolistsReducer = (state: Array<TodolistType>, action: ActionsType): Array<TodolistType> => {\r\n    switch (action.type) {\r\n        case 'REMOVE-TODOLIST':\r\n            return state.filter(tl => tl.id != action.id)\r\n        case 'ADD-TODOLIST':\r\n            return [...state, {id: action.todolistId, title: action.title, filter: \"all\"}]\r\n        case 'CHANGE-TODOLIST-TITLE': {\r\n            const todolist = state.find(tl => tl.id === action.id);\r\n            if (todolist) {\r\n                // если нашёлся - изменим ему заголовок\r\n                todolist.title = action.title;\r\n            }\r\n            return [...state]\r\n        }\r\n        case 'CHANGE-TODOLIST-FILTER': {\r\n            const todolist = state.find(tl => tl.id === action.id);\r\n            if (todolist) {\r\n                // если нашёлся - изменим ему заголовок\r\n                todolist.filter = action.filter;\r\n            }\r\n            return [...state];\r\n        }\r\n        default:\r\n            throw new Error(\"I don't understand this type\")\r\n    }\r\n}\r\n\r\nexport const removeTodolistAC = (todolistId: string): RemoveTodolistActionType => {\r\n    return { type: 'REMOVE-TODOLIST', id: todolistId}\r\n}\r\nexport const addTodolistAC = (title: string): AddTodolistActionType => {\r\n    return { type: 'ADD-TODOLIST', title, todolistId: v1()}\r\n}\r\nexport const changeTodolistTitleAC = (todolistId: string, title: string,): ChangeTodolistTitleActionType => {\r\n    return { type: 'CHANGE-TODOLIST-TITLE', title: title, id: todolistId}\r\n}\r\nexport const changeTodolistFilterAC = (todolistId: string, filter: FilterValuesType): ChangeTodolistFilterActionType => {\r\n    return { type: 'CHANGE-TODOLIST-FILTER', filter: filter, id: todolistId}\r\n}\r\n"]},"metadata":{},"sourceType":"module"}