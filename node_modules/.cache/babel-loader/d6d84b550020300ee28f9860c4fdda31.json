{"ast":null,"code":"var _jsxFileName = \"D:\\\\IT-incubator\\\\TODO \\u0441\\u0440\\u0435\\u0434\\u0430 \\u043F\\u0435\\u0440\\u0435\\u0445\\u043E\\u0434 \\u043D\\u0430 \\u0440\\u0435\\u0434\\u0430\\u043A\\u0441\\\\src\\\\AddItemForm.tsx\";\nimport React, { useState } from 'react';\nimport { IconButton, TextField } from '@material-ui/core';\nimport { AddBox } from '@material-ui/icons';\nexport function AddItemForm(props) {\n  console.log(\"form\");\n  let [title, setTitle] = useState(\"\");\n  let [error, setError] = useState(null);\n\n  const addItem = () => {\n    if (title.trim() !== \"\") {\n      props.addItem(title);\n      setTitle(\"\");\n    } else {\n      setError(\"Title is required\");\n    }\n  };\n\n  const onChangeHandler = e => {\n    setTitle(e.currentTarget.value);\n  };\n\n  const onKeyPressHandler = e => {\n    if (error) setError(null);\n\n    if (e.charCode === 13) {\n      addItem();\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    variant: \"outlined\",\n    error: !!error,\n    value: title,\n    onChange: onChangeHandler,\n    onKeyPress: onKeyPressHandler,\n    label: \"Title\",\n    helperText: error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(IconButton, {\n    color: \"primary\",\n    onClick: addItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(AddBox, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  })));\n}","map":{"version":3,"sources":["D:/IT-incubator/TODO среда переход на редакс/src/AddItemForm.tsx"],"names":["React","useState","IconButton","TextField","AddBox","AddItemForm","props","console","log","title","setTitle","error","setError","addItem","trim","onChangeHandler","e","currentTarget","value","onKeyPressHandler","charCode"],"mappings":";AAAA,OAAOA,KAAP,IAA2CC,QAA3C,QAA0D,OAA1D;AACA,SAAkCC,UAAlC,EAA8CC,SAA9C,QAA8D,mBAA9D;AACA,SAAQC,MAAR,QAAqB,oBAArB;AAMA,OAAO,SAASC,WAAT,CAAqBC,KAArB,EAAkD;AACrDC,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AAEA,MAAI,CAACC,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAhC;AACA,MAAI,CAACU,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAgB,IAAhB,CAAhC;;AAEA,QAAMY,OAAO,GAAG,MAAM;AAClB,QAAIJ,KAAK,CAACK,IAAN,OAAiB,EAArB,EAAyB;AACrBR,MAAAA,KAAK,CAACO,OAAN,CAAcJ,KAAd;AACAC,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACH,KAHD,MAGO;AACHE,MAAAA,QAAQ,CAAC,mBAAD,CAAR;AACH;AACJ,GAPD;;AASA,QAAMG,eAAe,GAAIC,CAAD,IAAsC;AAC1DN,IAAAA,QAAQ,CAACM,CAAC,CAACC,aAAF,CAAgBC,KAAjB,CAAR;AACH,GAFD;;AAIA,QAAMC,iBAAiB,GAAIH,CAAD,IAAwC;AAC/D,QAAGL,KAAH,EAAUC,QAAQ,CAAC,IAAD,CAAR;;AACT,QAAII,CAAC,CAACI,QAAF,KAAe,EAAnB,EAAuB;AACnBP,MAAAA,OAAO;AACV;AACJ,GALD;;AAOA,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACH,oBAAC,SAAD;AAAW,IAAA,OAAO,EAAC,UAAnB;AACW,IAAA,KAAK,EAAE,CAAC,CAACF,KADpB;AAEW,IAAA,KAAK,EAAEF,KAFlB;AAGW,IAAA,QAAQ,EAAEM,eAHrB;AAIW,IAAA,UAAU,EAAEI,iBAJvB;AAKW,IAAA,KAAK,EAAC,OALjB;AAMW,IAAA,UAAU,EAAER,KANvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADG,eASH,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAC,SAAlB;AAA4B,IAAA,OAAO,EAAEE,OAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CATG,CAAP;AAaH","sourcesContent":["import React, {ChangeEvent, KeyboardEvent, useState} from 'react';\r\nimport {Box, Button, FormControl, IconButton, TextField} from '@material-ui/core';\r\nimport {AddBox} from '@material-ui/icons';\r\n\r\ntype AddItemFormPropsType = {\r\n    addItem: (title: string) => void\r\n}\r\n\r\nexport function AddItemForm(props: AddItemFormPropsType) {\r\n    console.log(\"form\")\r\n\r\n    let [title, setTitle] = useState(\"\")\r\n    let [error, setError] = useState<string | null>(null)\r\n\r\n    const addItem = () => {\r\n        if (title.trim() !== \"\") {\r\n            props.addItem(title);\r\n            setTitle(\"\");\r\n        } else {\r\n            setError(\"Title is required\");\r\n        }\r\n    }\r\n\r\n    const onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setTitle(e.currentTarget.value)\r\n    }\r\n\r\n    const onKeyPressHandler = (e: KeyboardEvent<HTMLInputElement>) => {\r\n       if(error) setError(null);\r\n        if (e.charCode === 13) {\r\n            addItem();\r\n        }\r\n    }\r\n\r\n    return <div>\r\n        <TextField variant=\"outlined\"\r\n                   error={!!error}\r\n                   value={title}\r\n                   onChange={onChangeHandler}\r\n                   onKeyPress={onKeyPressHandler}\r\n                   label=\"Title\"\r\n                   helperText={error}\r\n        />\r\n        <IconButton color=\"primary\" onClick={addItem}>\r\n            <AddBox />\r\n        </IconButton>\r\n    </div>\r\n}\r\n"]},"metadata":{},"sourceType":"module"}