{"ast":null,"code":"import { v1 } from 'uuid';\nconst initialState = {};\nexport const tasksReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'REMOVE-TASK':\n      {\n        const stateCopy = { ...state\n        };\n        const tasks = stateCopy[action.todolistId];\n        const newTasks = tasks.filter(t => t.id != action.taskId);\n        stateCopy[action.todolistId] = newTasks;\n        return stateCopy;\n      }\n\n    case 'ADD-TASK':\n      {\n        const stateCopy = { ...state\n        };\n        const newTask = {\n          id: v1(),\n          title: action.title,\n          isDone: false\n        };\n        const tasks = stateCopy[action.todolistId];\n        const newTasks = [newTask, ...tasks];\n        stateCopy[action.todolistId] = newTasks;\n        return stateCopy;\n      }\n\n    case 'CHANGE-TASK-STATUS':\n      {\n        let todolistTasks = state[action.todolistId]; // найдём нужную таску:\n\n        let task = todolistTasks.find(t => t.id === action.taskId); //изменим таску, если она нашлась\n\n        if (task) {\n          task.isDone = action.isDone;\n        }\n\n        return { ...state,\n          [action.todolistId]: state[action.todolistId]\n        };\n      }\n\n    case 'CHANGE-TASK-TITLE':\n      {\n        let todolistTasks = state[action.todolistId]; // найдём нужную таску:\n\n        let task = todolistTasks.find(t => t.id === action.taskId); //изменим таску, если она нашлась\n\n        if (task) {\n          task.title = action.title;\n        }\n\n        return { ...state\n        };\n      }\n\n    case 'ADD-TODOLIST':\n      {\n        return { ...state,\n          [action.todolistId]: []\n        };\n      }\n\n    case 'REMOVE-TODOLIST':\n      {\n        const copyState = { ...state\n        };\n        delete copyState[action.id];\n        return copyState;\n      }\n\n    default:\n      return state;\n  }\n};\nexport const removeTaskAC = (taskId, todolistId) => {\n  return {\n    type: 'REMOVE-TASK',\n    taskId: taskId,\n    todolistId: todolistId\n  };\n};\nexport const addTaskAC = (title, todolistId) => {\n  return {\n    type: 'ADD-TASK',\n    title,\n    todolistId\n  };\n};\nexport const changeTaskStatusAC = (taskId, isDone, todolistId) => {\n  return {\n    type: 'CHANGE-TASK-STATUS',\n    isDone,\n    todolistId,\n    taskId\n  };\n};\nexport const changeTaskTitleAC = (taskId, title, todolistId) => {\n  return {\n    type: 'CHANGE-TASK-TITLE',\n    title,\n    todolistId,\n    taskId\n  };\n};","map":{"version":3,"sources":["D:/IT-incubator/TODO среда переход на редакс/src/state/tasks-reducer.ts"],"names":["v1","initialState","tasksReducer","state","action","type","stateCopy","tasks","todolistId","newTasks","filter","t","id","taskId","newTask","title","isDone","todolistTasks","task","find","copyState","removeTaskAC","addTaskAC","changeTaskStatusAC","changeTaskTitleAC"],"mappings":"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","sourcesContent":["import {TasksStateType} from '../App';\r\nimport {TaskType} from '../Todolist';\r\nimport {v1} from 'uuid';\r\nimport {AddTodolistActionType, RemoveTodolistActionType} from './todolists-reducer';\r\n\r\nexport type RemoveTaskActionType = {\r\n    type: 'REMOVE-TASK',\r\n    todolistId: string\r\n    taskId: string\r\n}\r\n\r\nexport type AddTaskActionType = {\r\n    type: 'ADD-TASK',\r\n    todolistId: string\r\n    title: string\r\n}\r\n\r\nexport type ChangeTaskStatusActionType = {\r\n    type: 'CHANGE-TASK-STATUS',\r\n    todolistId: string\r\n    taskId: string\r\n    isDone: boolean\r\n}\r\n\r\nexport type ChangeTaskTitleActionType = {\r\n    type: 'CHANGE-TASK-TITLE',\r\n    todolistId: string\r\n    taskId: string\r\n    title: string\r\n}\r\n\r\ntype ActionsType = RemoveTaskActionType | AddTaskActionType\r\n    | ChangeTaskStatusActionType\r\n    | ChangeTaskTitleActionType\r\n    | AddTodolistActionType\r\n    | RemoveTodolistActionType\r\n\r\nconst initialState: TasksStateType = {}\r\n\r\nexport const tasksReducer = (state: TasksStateType = initialState, action: ActionsType): TasksStateType => {\r\n    switch (action.type) {\r\n        case 'REMOVE-TASK': {\r\n            const stateCopy = {...state}\r\n            const tasks = stateCopy[action.todolistId];\r\n            const newTasks = tasks.filter(t => t.id != action.taskId);\r\n            stateCopy[action.todolistId] = newTasks;\r\n            return stateCopy;\r\n        }\r\n        case 'ADD-TASK': {\r\n            const stateCopy = {...state}\r\n            const newTask: TaskType = {\r\n                id: v1(),\r\n                title: action.title,\r\n                isDone: false\r\n            }\r\n            const tasks = stateCopy[action.todolistId];\r\n            const newTasks = [newTask, ...tasks];\r\n            stateCopy[action.todolistId] = newTasks;\r\n            return stateCopy;\r\n        }\r\n        case 'CHANGE-TASK-STATUS': {\r\n            let todolistTasks = state[action.todolistId];\r\n            // найдём нужную таску:\r\n            let task = todolistTasks.find(t => t.id === action.taskId);\r\n            //изменим таску, если она нашлась\r\n            if (task) {\r\n                task.isDone = action.isDone;\r\n            }\r\n            return ({...state,[action.todolistId]:state[action.todolistId]});\r\n        }\r\n        case 'CHANGE-TASK-TITLE': {\r\n            let todolistTasks = state[action.todolistId];\r\n            // найдём нужную таску:\r\n            let task = todolistTasks.find(t => t.id === action.taskId);\r\n            //изменим таску, если она нашлась\r\n            if (task) {\r\n                task.title = action.title;\r\n            }\r\n            return ({...state});\r\n        }\r\n        case 'ADD-TODOLIST': {\r\n            return {\r\n                ...state,\r\n                [action.todolistId]: []\r\n            }\r\n        }\r\n        case 'REMOVE-TODOLIST': {\r\n            const copyState = {...state};\r\n            delete copyState[action.id];\r\n            return copyState;\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const removeTaskAC = (taskId: string, todolistId: string): RemoveTaskActionType => {\r\n    return {type: 'REMOVE-TASK', taskId: taskId, todolistId: todolistId}\r\n}\r\nexport const addTaskAC = (title: string, todolistId: string): AddTaskActionType => {\r\n    return {type: 'ADD-TASK', title, todolistId}\r\n}\r\nexport const changeTaskStatusAC = (taskId: string, isDone: boolean, todolistId: string): ChangeTaskStatusActionType => {\r\n    return {type: 'CHANGE-TASK-STATUS', isDone, todolistId, taskId}\r\n}\r\nexport const changeTaskTitleAC = (taskId: string, title: string, todolistId: string): ChangeTaskTitleActionType => {\r\n    return {type: 'CHANGE-TASK-TITLE', title, todolistId, taskId}\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}