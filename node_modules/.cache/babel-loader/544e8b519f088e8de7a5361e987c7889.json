{"ast":null,"code":"// меня вызовут и дадут мне стейт (почти всегда объект)\n// и инструкцию (action, тоже объект)\n// согласно прописаному type в этом action (инструкции) я поменяю state\nexport const userReducer = (state, action) => {\n  switch (action.type) {\n    case 'INCREMENT-AGE':\n      let newState = { ...state\n      }; //делаем копию\n\n      newState.age = state.age + 1; // у копии имеем право менять св-во\n\n      return newState;\n    //возвращаем копию\n\n    case 'INCREMENT-CHILDREN-COUNT':\n      // а можно без создания переменных промежуточных (делайте, как вам понятнее)\n      return { ...state,\n        childrenCount: state.childrenCount + 1\n      };\n\n    case 'CHANGE-NAME':\n      // а можно без  создания переменных промежуточных (делайте, как вам понятнее)\n      return { ...state,\n        name: action.newName\n      };\n\n    default:\n      throw new Error(\"I don't understand this type\");\n  }\n};","map":{"version":3,"sources":["D:/IT-incubator/TODO среда переход на редакс/src/state/user-reducer.ts"],"names":["userReducer","state","action","type","newState","age","childrenCount","name","newName","Error"],"mappings":"AAUA;AACA;AACA;AACA,OAAO,MAAMA,WAAW,GAAG,CAACC,KAAD,EAAmBC,MAAnB,KAA0C;AACjE,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,eAAL;AACI,UAAIC,QAAQ,GAAG,EAAC,GAAGH;AAAJ,OAAf,CADJ,CAC8B;;AAC1BG,MAAAA,QAAQ,CAACC,GAAT,GAAeJ,KAAK,CAACI,GAAN,GAAY,CAA3B,CAFJ,CAEiC;;AAC7B,aAAOD,QAAP;AAAgB;;AACpB,SAAK,0BAAL;AACI;AACA,aAAO,EACH,GAAGH,KADA;AAEHK,QAAAA,aAAa,EAAEL,KAAK,CAACK,aAAN,GAAsB;AAFlC,OAAP;;AAIJ,SAAK,aAAL;AACI;AACA,aAAO,EACH,GAAGL,KADA;AAEHM,QAAAA,IAAI,EAAEL,MAAM,CAACM;AAFV,OAAP;;AAIJ;AACI,YAAM,IAAIC,KAAJ,CAAU,8BAAV,CAAN;AAlBR;AAoBH,CArBM","sourcesContent":["type StateType = {\r\n    age: number\r\n    childrenCount: number\r\n    name: string\r\n}\r\ntype ActionType = {\r\n    type: string\r\n    [key: string]: any\r\n}\r\n\r\n// меня вызовут и дадут мне стейт (почти всегда объект)\r\n// и инструкцию (action, тоже объект)\r\n// согласно прописаному type в этом action (инструкции) я поменяю state\r\nexport const userReducer = (state: StateType, action: ActionType) => {\r\n    switch (action.type) {\r\n        case 'INCREMENT-AGE':\r\n            let newState = {...state};//делаем копию\r\n            newState.age = state.age + 1;// у копии имеем право менять св-во\r\n            return newState;//возвращаем копию\r\n        case 'INCREMENT-CHILDREN-COUNT':\r\n            // а можно без создания переменных промежуточных (делайте, как вам понятнее)\r\n            return {\r\n                ...state,\r\n                childrenCount: state.childrenCount + 1\r\n            };\r\n        case 'CHANGE-NAME':\r\n            // а можно без  создания переменных промежуточных (делайте, как вам понятнее)\r\n            return {\r\n                ...state,\r\n                name: action.newName\r\n            };\r\n        default:\r\n            throw new Error(\"I don't understand this type\")\r\n    }\r\n}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}