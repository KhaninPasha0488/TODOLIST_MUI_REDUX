{"ast":null,"code":"var _jsxFileName = \"D:\\\\IT-incubator\\\\TODO \\u0441\\u0440\\u0435\\u0434\\u0430 \\u043F\\u0435\\u0440\\u0435\\u0445\\u043E\\u0434 \\u043D\\u0430 \\u0440\\u0435\\u0434\\u0430\\u043A\\u0441\\\\src\\\\AppWithRedux .tsx\";\nimport React from 'react';\nimport './App.css';\nimport { Todolist } from './Todolist';\nimport { AddItemForm } from './AddItemForm';\nimport { AppBar, Button, Container, Grid, IconButton, Paper, Toolbar, Typography } from '@material-ui/core';\nimport { Menu } from '@material-ui/icons';\nimport { addTodolistAC, changeTodolistFilterAC, changeTodolistTitleAC, removeTodolistAC } from \"./state/todolists-reducer\";\nimport { addTaskAC, changeTaskStatusAC, changeTaskTitleAC, removeTaskAC } from \"./state/tasks-reducer\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nfunction AppWithRedux() {\n  const dispatch = useDispatch();\n  const todolists = useSelector(state => state.todolist);\n  const tasks = useSelector(state => state.tasks);\n\n  function removeTask(id, todolistId) {\n    const action = removeTaskAC(id, todolistId);\n    dispatch(action);\n  }\n\n  function addTask(title, todolistId) {\n    const action = addTaskAC(title, todolistId);\n    dispatch(action);\n  }\n\n  function changeStatus(id, isDone, todolistId) {\n    const action = changeTaskStatusAC(id, isDone, todolistId);\n    dispatch(action);\n  }\n\n  function changeTaskTitle(id, newTitle, todolistId) {\n    const action = changeTaskTitleAC(id, newTitle, todolistId);\n    dispatch(action);\n  }\n\n  function changeFilter(value, todolistId) {\n    const action = changeTodolistFilterAC(value, todolistId);\n    dispatch(action);\n  }\n\n  function removeTodolist(id) {\n    const action = removeTodolistAC(id);\n    dispatch(action);\n    dispatch(action);\n  }\n\n  function changeTodolistTitle(id, title) {\n    const action = changeTodolistTitleAC(id, title);\n    dispatch(action);\n  }\n\n  function addTodolist(title) {\n    const action = addTodolistAC(title);\n    dispatch(action);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(AppBar, {\n    position: \"static\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Toolbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    edge: \"start\",\n    color: \"inherit\",\n    \"aria-label\": \"menu\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Menu, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 21\n    }\n  }, \"News\"), /*#__PURE__*/React.createElement(Button, {\n    color: \"inherit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 21\n    }\n  }, \"Login\"))), /*#__PURE__*/React.createElement(Container, {\n    fixed: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    style: {\n      padding: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(AddItemForm, {\n    addItem: addTodolist,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 17\n    }\n  }, todolists.map(tl => {\n    let allTodolistTasks = tasks[tl.id];\n    let tasksForTodolist = allTodolistTasks;\n\n    if (tl.filter === \"active\") {\n      tasksForTodolist = allTodolistTasks.filter(t => t.isDone === false);\n    }\n\n    if (tl.filter === \"completed\") {\n      tasksForTodolist = allTodolistTasks.filter(t => t.isDone === true);\n    }\n\n    return /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 36\n      }\n    }, /*#__PURE__*/React.createElement(Paper, {\n      style: {\n        padding: \"10px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Todolist, {\n      key: tl.id,\n      id: tl.id,\n      title: tl.title,\n      tasks: tasksForTodolist,\n      removeTask: removeTask,\n      changeFilter: changeFilter,\n      addTask: addTask,\n      changeTaskStatus: changeStatus,\n      filter: tl.filter,\n      removeTodolist: removeTodolist,\n      changeTaskTitle: changeTaskTitle,\n      changeTodolistTitle: changeTodolistTitle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 37\n      }\n    })));\n  }))));\n}\n\nexport default AppWithRedux;","map":{"version":3,"sources":["D:/IT-incubator/TODO среда переход на редакс/src/AppWithRedux .tsx"],"names":["React","Todolist","AddItemForm","AppBar","Button","Container","Grid","IconButton","Paper","Toolbar","Typography","Menu","addTodolistAC","changeTodolistFilterAC","changeTodolistTitleAC","removeTodolistAC","addTaskAC","changeTaskStatusAC","changeTaskTitleAC","removeTaskAC","useDispatch","useSelector","AppWithRedux","dispatch","todolists","state","todolist","tasks","removeTask","id","todolistId","action","addTask","title","changeStatus","isDone","changeTaskTitle","newTitle","changeFilter","value","removeTodolist","changeTodolistTitle","addTodolist","padding","map","tl","allTodolistTasks","tasksForTodolist","filter","t"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport './App.css';\r\nimport {TaskType, Todolist} from './Todolist';\r\nimport {v1} from 'uuid';\r\nimport {AddItemForm} from './AddItemForm';\r\nimport {AppBar, Button, Container, Grid, IconButton, Paper, Toolbar, Typography} from '@material-ui/core';\r\nimport {Menu} from '@material-ui/icons';\r\nimport {userReducer} from \"./state/user-reducer\";\r\nimport {\r\n    addTodolistAC,\r\n    changeTodolistFilterAC,\r\n    changeTodolistTitleAC,\r\n    removeTodolistAC,\r\n    todolistsReducer\r\n} from \"./state/todolists-reducer\";\r\nimport {addTaskAC, changeTaskStatusAC, changeTaskTitleAC, removeTaskAC, tasksReducer} from \"./state/tasks-reducer\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootState} from \"./state/store\";\r\n\r\nexport type FilterValuesType = \"all\" | \"active\" | \"completed\";\r\nexport type TodolistType = {\r\n    id: string\r\n    title: string\r\n    filter: FilterValuesType\r\n}\r\n\r\nexport type TasksStateType = {\r\n    [key: string]: Array<TaskType>\r\n}\r\n\r\n\r\nfunction AppWithRedux () {\r\n\r\n\r\n    const dispatch = useDispatch()\r\n    const todolists = useSelector<AppRootState,Array<TodolistType>>(state=>state.todolist)\r\n    const tasks = useSelector<AppRootState,TasksStateType>(state=>state.tasks)\r\n\r\n\r\n\r\n\r\n    function removeTask(id: string, todolistId: string) {\r\n        const action = removeTaskAC(id, todolistId)\r\n        dispatch(action)\r\n    }\r\n\r\n    function addTask(title: string, todolistId: string) {\r\n        const action = addTaskAC(title,todolistId)\r\n        dispatch(action)\r\n    }\r\n\r\n    function changeStatus(id: string, isDone: boolean, todolistId: string) {\r\n        const action = changeTaskStatusAC(id,isDone,todolistId)\r\n        dispatch(action)\r\n    }\r\n\r\n    function changeTaskTitle(id: string, newTitle: string, todolistId: string) {\r\n        const action = changeTaskTitleAC(id,newTitle,todolistId)\r\n        dispatch(action)\r\n    }\r\n\r\n\r\n    function changeFilter(value: FilterValuesType, todolistId: string) {\r\n        const action = changeTodolistFilterAC(value,todolistId)\r\n        dispatch(action)\r\n    }\r\n\r\n    function removeTodolist(id: string) {\r\n        const action =  removeTodolistAC(id)\r\n        dispatch(action)\r\n        dispatch(action)\r\n    }\r\n\r\n    function changeTodolistTitle(id: string, title: string) {\r\n        const action =  changeTodolistTitleAC(id,title)\r\n        dispatch(action)\r\n\r\n    }\r\n\r\n    function addTodolist(title: string) {\r\n        const action =  addTodolistAC(title)\r\n        dispatch(action)\r\n    }\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <AppBar position=\"static\">\r\n                <Toolbar>\r\n                    <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\">\r\n                        <Menu/>\r\n                    </IconButton>\r\n                    <Typography variant=\"h6\">\r\n                        News\r\n                    </Typography>\r\n                    <Button color=\"inherit\">Login</Button>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Container fixed>\r\n                <Grid container style={{padding: \"20px\"}}>\r\n                    <AddItemForm addItem={addTodolist}/>\r\n                </Grid>\r\n                <Grid container spacing={3}>\r\n                    {\r\n                        todolists.map(tl => {\r\n                            let allTodolistTasks = tasks[tl.id];\r\n                            let tasksForTodolist = allTodolistTasks;\r\n\r\n                            if (tl.filter === \"active\") {\r\n                                tasksForTodolist = allTodolistTasks.filter(t => t.isDone === false);\r\n                            }\r\n                            if (tl.filter === \"completed\") {\r\n                                tasksForTodolist = allTodolistTasks.filter(t => t.isDone === true);\r\n                            }\r\n\r\n                            return <Grid item>\r\n                                <Paper style={{padding: \"10px\"}}>\r\n                                    <Todolist\r\n                                        key={tl.id}\r\n                                        id={tl.id}\r\n                                        title={tl.title}\r\n                                        tasks={tasksForTodolist}\r\n                                        removeTask={removeTask}\r\n                                        changeFilter={changeFilter}\r\n                                        addTask={addTask}\r\n                                        changeTaskStatus={changeStatus}\r\n                                        filter={tl.filter}\r\n                                        removeTodolist={removeTodolist}\r\n                                        changeTaskTitle={changeTaskTitle}\r\n                                        changeTodolistTitle={changeTodolistTitle}\r\n                                    />\r\n                                </Paper>\r\n                            </Grid>\r\n                        })\r\n                    }\r\n                </Grid>\r\n            </Container>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AppWithRedux;\r\n"]},"metadata":{},"sourceType":"module"}