{"ast":null,"code":"var _jsxFileName = \"D:\\\\IT-incubator\\\\TODO \\u0441\\u0440\\u0435\\u0434\\u0430 \\u043F\\u0435\\u0440\\u0435\\u0445\\u043E\\u0434 \\u043D\\u0430 \\u0440\\u0435\\u0434\\u0430\\u043A\\u0441\\\\src\\\\AppWithRedux .tsx\";\nimport React from 'react';\nimport './App.css';\nimport { Todolist } from './Todolist';\nimport { v1 } from 'uuid';\nimport { AddItemForm } from './AddItemForm';\nimport { AppBar, Button, Container, Grid, IconButton, Paper, Toolbar, Typography } from '@material-ui/core';\nimport { Menu } from '@material-ui/icons';\nimport { userReducer } from \"./state/user-reducer\";\nimport { todolistsReducer } from \"./state/todolists-reducer\";\nimport { addTaskAC, removeTaskAC, tasksReducer } from \"./state/tasks-reducer\";\n\nfunction AppWithRedux() {\n  let todolistId1 = v1();\n  let todolistId2 = v1();\n  let [todolists, dispatchToTodolistsReducer] = userReducer(todolistsReducer, [{\n    id: todolistId1,\n    title: \"What to learn\",\n    filter: \"all\"\n  }, {\n    id: todolistId2,\n    title: \"What to buy\",\n    filter: \"all\"\n  }]);\n  let [tasks, dispatchToTasksReducer] = userReducer(tasksReducer, {\n    [todolistId1]: [{\n      id: v1(),\n      title: \"HTML&CSS\",\n      isDone: true\n    }, {\n      id: v1(),\n      title: \"JS\",\n      isDone: true\n    }],\n    [todolistId2]: [{\n      id: v1(),\n      title: \"Milk\",\n      isDone: true\n    }, {\n      id: v1(),\n      title: \"React Book\",\n      isDone: true\n    }]\n  });\n\n  function removeTask(id, todolistId) {\n    const action = removeTaskAC(id, todolistId);\n    dispatchToTasksReducer(action);\n  }\n\n  function addTask(title, todolistId) {\n    const action = addTaskAC(title, todolistId);\n    dispatchToTasksReducer(action);\n  }\n\n  function changeStatus(id, isDone, todolistId) {\n    //достанем нужный массив по todolistId:\n    let todolistTasks = tasks[todolistId]; // найдём нужную таску:\n\n    let task = todolistTasks.find(t => t.id === id); //изменим таску, если она нашлась\n\n    if (task) {\n      task.isDone = isDone; // засетаем в стейт копию объекта, чтобы React отреагировал перерисовкой\n\n      setTasks({ ...tasks\n      });\n    }\n  }\n\n  function changeTaskTitle(id, newTitle, todolistId) {\n    //достанем нужный массив по todolistId:\n    let todolistTasks = tasks[todolistId]; // найдём нужную таску:\n\n    let task = todolistTasks.find(t => t.id === id); //изменим таску, если она нашлась\n\n    if (task) {\n      task.title = newTitle; // засетаем в стейт копию объекта, чтобы React отреагировал перерисовкой\n\n      setTasks({ ...tasks\n      });\n    }\n  }\n\n  function changeFilter(value, todolistId) {\n    let todolist = todolists.find(tl => tl.id === todolistId);\n\n    if (todolist) {\n      todolist.filter = value;\n      setTodolists([...todolists]);\n    }\n  }\n\n  function removeTodolist(id) {\n    // засунем в стейт список тудулистов, id которых не равны тому, который нужно выкинуть\n    setTodolists(todolists.filter(tl => tl.id != id)); // удалим таски для этого тудулиста из второго стейта, где мы храним отдельно таски\n\n    delete tasks[id]; // удаляем св-во из объекта... значением которого являлся массив тасок\n    // засетаем в стейт копию объекта, чтобы React отреагировал перерисовкой\n\n    setTasks({ ...tasks\n    });\n  }\n\n  function changeTodolistTitle(id, title) {\n    // найдём нужный todolist\n    const todolist = todolists.find(tl => tl.id === id);\n\n    if (todolist) {\n      // если нашёлся - изменим ему заголовок\n      todolist.title = title;\n      setTodolists([...todolists]);\n    }\n  }\n\n  function addTodolist(title) {\n    let newTodolistId = v1();\n    let newTodolist = {\n      id: newTodolistId,\n      title: title,\n      filter: 'all'\n    };\n    setTodolists([newTodolist, ...todolists]);\n    setTasks({ ...tasks,\n      [newTodolistId]: []\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(AppBar, {\n    position: \"static\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Toolbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    edge: \"start\",\n    color: \"inherit\",\n    \"aria-label\": \"menu\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Menu, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 21\n    }\n  }, \"News\"), /*#__PURE__*/React.createElement(Button, {\n    color: \"inherit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 21\n    }\n  }, \"Login\"))), /*#__PURE__*/React.createElement(Container, {\n    fixed: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    style: {\n      padding: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(AddItemForm, {\n    addItem: addTodolist,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 17\n    }\n  }, todolists.map(tl => {\n    let allTodolistTasks = tasks[tl.id];\n    let tasksForTodolist = allTodolistTasks;\n\n    if (tl.filter === \"active\") {\n      tasksForTodolist = allTodolistTasks.filter(t => t.isDone === false);\n    }\n\n    if (tl.filter === \"completed\") {\n      tasksForTodolist = allTodolistTasks.filter(t => t.isDone === true);\n    }\n\n    return /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 36\n      }\n    }, /*#__PURE__*/React.createElement(Paper, {\n      style: {\n        padding: \"10px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Todolist, {\n      key: tl.id,\n      id: tl.id,\n      title: tl.title,\n      tasks: tasksForTodolist,\n      removeTask: removeTask,\n      changeFilter: changeFilter,\n      addTask: addTask,\n      changeTaskStatus: changeStatus,\n      filter: tl.filter,\n      removeTodolist: removeTodolist,\n      changeTaskTitle: changeTaskTitle,\n      changeTodolistTitle: changeTodolistTitle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 37\n      }\n    })));\n  }))));\n}\n\nexport default App;","map":{"version":3,"sources":["D:/IT-incubator/TODO среда переход на редакс/src/AppWithRedux .tsx"],"names":["React","Todolist","v1","AddItemForm","AppBar","Button","Container","Grid","IconButton","Paper","Toolbar","Typography","Menu","userReducer","todolistsReducer","addTaskAC","removeTaskAC","tasksReducer","AppWithRedux","todolistId1","todolistId2","todolists","dispatchToTodolistsReducer","id","title","filter","tasks","dispatchToTasksReducer","isDone","removeTask","todolistId","action","addTask","changeStatus","todolistTasks","task","find","t","setTasks","changeTaskTitle","newTitle","changeFilter","value","todolist","tl","setTodolists","removeTodolist","changeTodolistTitle","addTodolist","newTodolistId","newTodolist","padding","map","allTodolistTasks","tasksForTodolist","App"],"mappings":";AAAA,OAAOA,KAAP,MAA8B,OAA9B;AACA,OAAO,WAAP;AACA,SAAkBC,QAAlB,QAAiC,YAAjC;AACA,SAAQC,EAAR,QAAiB,MAAjB;AACA,SAAQC,WAAR,QAA0B,eAA1B;AACA,SAAQC,MAAR,EAAgBC,MAAhB,EAAwBC,SAAxB,EAAmCC,IAAnC,EAAyCC,UAAzC,EAAqDC,KAArD,EAA4DC,OAA5D,EAAqEC,UAArE,QAAsF,mBAAtF;AACA,SAAQC,IAAR,QAAmB,oBAAnB;AACA,SAAQC,WAAR,QAA0B,sBAA1B;AACA,SAAQC,gBAAR,QAA+B,2BAA/B;AACA,SAAQC,SAAR,EAAmBC,YAAnB,EAAiCC,YAAjC,QAAoD,uBAApD;;AAcA,SAASC,YAAT,GAAyB;AACrB,MAAIC,WAAW,GAAGjB,EAAE,EAApB;AACA,MAAIkB,WAAW,GAAGlB,EAAE,EAApB;AAEA,MAAI,CAACmB,SAAD,EAAYC,0BAAZ,IAA0CT,WAAW,CAACC,gBAAD,EAAkB,CACvE;AAACS,IAAAA,EAAE,EAAEJ,WAAL;AAAkBK,IAAAA,KAAK,EAAE,eAAzB;AAA0CC,IAAAA,MAAM,EAAE;AAAlD,GADuE,EAEvE;AAACF,IAAAA,EAAE,EAAEH,WAAL;AAAkBI,IAAAA,KAAK,EAAE,aAAzB;AAAwCC,IAAAA,MAAM,EAAE;AAAhD,GAFuE,CAAlB,CAAzD;AAKA,MAAI,CAACC,KAAD,EAAQC,sBAAR,IAAkCd,WAAW,CAACI,YAAD,EAAc;AAC3D,KAACE,WAAD,GAAe,CACX;AAACI,MAAAA,EAAE,EAAErB,EAAE,EAAP;AAAWsB,MAAAA,KAAK,EAAE,UAAlB;AAA8BI,MAAAA,MAAM,EAAE;AAAtC,KADW,EAEX;AAACL,MAAAA,EAAE,EAAErB,EAAE,EAAP;AAAWsB,MAAAA,KAAK,EAAE,IAAlB;AAAwBI,MAAAA,MAAM,EAAE;AAAhC,KAFW,CAD4C;AAK3D,KAACR,WAAD,GAAe,CACX;AAACG,MAAAA,EAAE,EAAErB,EAAE,EAAP;AAAWsB,MAAAA,KAAK,EAAE,MAAlB;AAA0BI,MAAAA,MAAM,EAAE;AAAlC,KADW,EAEX;AAACL,MAAAA,EAAE,EAAErB,EAAE,EAAP;AAAWsB,MAAAA,KAAK,EAAE,YAAlB;AAAgCI,MAAAA,MAAM,EAAE;AAAxC,KAFW;AAL4C,GAAd,CAAjD;;AAYA,WAASC,UAAT,CAAoBN,EAApB,EAAgCO,UAAhC,EAAoD;AAChD,UAAMC,MAAM,GAAGf,YAAY,CAACO,EAAD,EAAKO,UAAL,CAA3B;AACAH,IAAAA,sBAAsB,CAACI,MAAD,CAAtB;AACH;;AAED,WAASC,OAAT,CAAiBR,KAAjB,EAAgCM,UAAhC,EAAoD;AAChD,UAAMC,MAAM,GAAGhB,SAAS,CAACS,KAAD,EAAOM,UAAP,CAAxB;AACAH,IAAAA,sBAAsB,CAACI,MAAD,CAAtB;AACH;;AAED,WAASE,YAAT,CAAsBV,EAAtB,EAAkCK,MAAlC,EAAmDE,UAAnD,EAAuE;AACnE;AACA,QAAII,aAAa,GAAGR,KAAK,CAACI,UAAD,CAAzB,CAFmE,CAGnE;;AACA,QAAIK,IAAI,GAAGD,aAAa,CAACE,IAAd,CAAmBC,CAAC,IAAIA,CAAC,CAACd,EAAF,KAASA,EAAjC,CAAX,CAJmE,CAKnE;;AACA,QAAIY,IAAJ,EAAU;AACNA,MAAAA,IAAI,CAACP,MAAL,GAAcA,MAAd,CADM,CAEN;;AACAU,MAAAA,QAAQ,CAAC,EAAC,GAAGZ;AAAJ,OAAD,CAAR;AACH;AACJ;;AAED,WAASa,eAAT,CAAyBhB,EAAzB,EAAqCiB,QAArC,EAAuDV,UAAvD,EAA2E;AACvE;AACA,QAAII,aAAa,GAAGR,KAAK,CAACI,UAAD,CAAzB,CAFuE,CAGvE;;AACA,QAAIK,IAAI,GAAGD,aAAa,CAACE,IAAd,CAAmBC,CAAC,IAAIA,CAAC,CAACd,EAAF,KAASA,EAAjC,CAAX,CAJuE,CAKvE;;AACA,QAAIY,IAAJ,EAAU;AACNA,MAAAA,IAAI,CAACX,KAAL,GAAagB,QAAb,CADM,CAEN;;AACAF,MAAAA,QAAQ,CAAC,EAAC,GAAGZ;AAAJ,OAAD,CAAR;AACH;AACJ;;AAGD,WAASe,YAAT,CAAsBC,KAAtB,EAA+CZ,UAA/C,EAAmE;AAC/D,QAAIa,QAAQ,GAAGtB,SAAS,CAACe,IAAV,CAAeQ,EAAE,IAAIA,EAAE,CAACrB,EAAH,KAAUO,UAA/B,CAAf;;AACA,QAAIa,QAAJ,EAAc;AACVA,MAAAA,QAAQ,CAAClB,MAAT,GAAkBiB,KAAlB;AACAG,MAAAA,YAAY,CAAC,CAAC,GAAGxB,SAAJ,CAAD,CAAZ;AACH;AACJ;;AAED,WAASyB,cAAT,CAAwBvB,EAAxB,EAAoC;AAChC;AACAsB,IAAAA,YAAY,CAACxB,SAAS,CAACI,MAAV,CAAiBmB,EAAE,IAAIA,EAAE,CAACrB,EAAH,IAASA,EAAhC,CAAD,CAAZ,CAFgC,CAGhC;;AACA,WAAOG,KAAK,CAACH,EAAD,CAAZ,CAJgC,CAId;AAClB;;AACAe,IAAAA,QAAQ,CAAC,EAAC,GAAGZ;AAAJ,KAAD,CAAR;AACH;;AAED,WAASqB,mBAAT,CAA6BxB,EAA7B,EAAyCC,KAAzC,EAAwD;AACpD;AACA,UAAMmB,QAAQ,GAAGtB,SAAS,CAACe,IAAV,CAAeQ,EAAE,IAAIA,EAAE,CAACrB,EAAH,KAAUA,EAA/B,CAAjB;;AACA,QAAIoB,QAAJ,EAAc;AACV;AACAA,MAAAA,QAAQ,CAACnB,KAAT,GAAiBA,KAAjB;AACAqB,MAAAA,YAAY,CAAC,CAAC,GAAGxB,SAAJ,CAAD,CAAZ;AACH;AACJ;;AAED,WAAS2B,WAAT,CAAqBxB,KAArB,EAAoC;AAChC,QAAIyB,aAAa,GAAG/C,EAAE,EAAtB;AACA,QAAIgD,WAAyB,GAAG;AAAC3B,MAAAA,EAAE,EAAE0B,aAAL;AAAoBzB,MAAAA,KAAK,EAAEA,KAA3B;AAAkCC,MAAAA,MAAM,EAAE;AAA1C,KAAhC;AACAoB,IAAAA,YAAY,CAAC,CAACK,WAAD,EAAc,GAAG7B,SAAjB,CAAD,CAAZ;AACAiB,IAAAA,QAAQ,CAAC,EACL,GAAGZ,KADE;AAEL,OAACuB,aAAD,GAAiB;AAFZ,KAAD,CAAR;AAIH;;AAED,sBACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AAAQ,IAAA,QAAQ,EAAC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,UAAD;AAAY,IAAA,IAAI,EAAC,OAAjB;AAAyB,IAAA,KAAK,EAAC,SAA/B;AAAyC,kBAAW,MAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,eAII,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ,eAOI,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAPJ,CADJ,CADJ,eAYI,oBAAC,SAAD;AAAW,IAAA,KAAK,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,KAAK,EAAE;AAACE,MAAAA,OAAO,EAAE;AAAV,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,WAAD;AAAa,IAAA,OAAO,EAAEH,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,eAII,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAE,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQ3B,SAAS,CAAC+B,GAAV,CAAcR,EAAE,IAAI;AAChB,QAAIS,gBAAgB,GAAG3B,KAAK,CAACkB,EAAE,CAACrB,EAAJ,CAA5B;AACA,QAAI+B,gBAAgB,GAAGD,gBAAvB;;AAEA,QAAIT,EAAE,CAACnB,MAAH,KAAc,QAAlB,EAA4B;AACxB6B,MAAAA,gBAAgB,GAAGD,gBAAgB,CAAC5B,MAAjB,CAAwBY,CAAC,IAAIA,CAAC,CAACT,MAAF,KAAa,KAA1C,CAAnB;AACH;;AACD,QAAIgB,EAAE,CAACnB,MAAH,KAAc,WAAlB,EAA+B;AAC3B6B,MAAAA,gBAAgB,GAAGD,gBAAgB,CAAC5B,MAAjB,CAAwBY,CAAC,IAAIA,CAAC,CAACT,MAAF,KAAa,IAA1C,CAAnB;AACH;;AAED,wBAAO,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACH,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAE;AAACuB,QAAAA,OAAO,EAAE;AAAV,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,QAAD;AACI,MAAA,GAAG,EAAEP,EAAE,CAACrB,EADZ;AAEI,MAAA,EAAE,EAAEqB,EAAE,CAACrB,EAFX;AAGI,MAAA,KAAK,EAAEqB,EAAE,CAACpB,KAHd;AAII,MAAA,KAAK,EAAE8B,gBAJX;AAKI,MAAA,UAAU,EAAEzB,UALhB;AAMI,MAAA,YAAY,EAAEY,YANlB;AAOI,MAAA,OAAO,EAAET,OAPb;AAQI,MAAA,gBAAgB,EAAEC,YARtB;AASI,MAAA,MAAM,EAAEW,EAAE,CAACnB,MATf;AAUI,MAAA,cAAc,EAAEqB,cAVpB;AAWI,MAAA,eAAe,EAAEP,eAXrB;AAYI,MAAA,mBAAmB,EAAEQ,mBAZzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADG,CAAP;AAkBH,GA7BD,CAFR,CAJJ,CAZJ,CADJ;AAsDH;;AAED,eAAeQ,GAAf","sourcesContent":["import React, {useState} from 'react';\r\nimport './App.css';\r\nimport {TaskType, Todolist} from './Todolist';\r\nimport {v1} from 'uuid';\r\nimport {AddItemForm} from './AddItemForm';\r\nimport {AppBar, Button, Container, Grid, IconButton, Paper, Toolbar, Typography} from '@material-ui/core';\r\nimport {Menu} from '@material-ui/icons';\r\nimport {userReducer} from \"./state/user-reducer\";\r\nimport {todolistsReducer} from \"./state/todolists-reducer\";\r\nimport {addTaskAC, removeTaskAC, tasksReducer} from \"./state/tasks-reducer\";\r\n\r\nexport type FilterValuesType = \"all\" | \"active\" | \"completed\";\r\nexport type TodolistType = {\r\n    id: string\r\n    title: string\r\n    filter: FilterValuesType\r\n}\r\n\r\nexport type TasksStateType = {\r\n    [key: string]: Array<TaskType>\r\n}\r\n\r\n\r\nfunction AppWithRedux () {\r\n    let todolistId1 = v1();\r\n    let todolistId2 = v1();\r\n\r\n    let [todolists, dispatchToTodolistsReducer] = userReducer(todolistsReducer,[\r\n        {id: todolistId1, title: \"What to learn\", filter: \"all\"},\r\n        {id: todolistId2, title: \"What to buy\", filter: \"all\"}\r\n    ])\r\n\r\n    let [tasks, dispatchToTasksReducer] = userReducer(tasksReducer,{\r\n        [todolistId1]: [\r\n            {id: v1(), title: \"HTML&CSS\", isDone: true},\r\n            {id: v1(), title: \"JS\", isDone: true}\r\n        ],\r\n        [todolistId2]: [\r\n            {id: v1(), title: \"Milk\", isDone: true},\r\n            {id: v1(), title: \"React Book\", isDone: true}\r\n        ]\r\n    });\r\n\r\n\r\n    function removeTask(id: string, todolistId: string) {\r\n        const action = removeTaskAC(id, todolistId)\r\n        dispatchToTasksReducer(action)\r\n    }\r\n\r\n    function addTask(title: string, todolistId: string) {\r\n        const action = addTaskAC(title,todolistId)\r\n        dispatchToTasksReducer(action)\r\n    }\r\n\r\n    function changeStatus(id: string, isDone: boolean, todolistId: string) {\r\n        //достанем нужный массив по todolistId:\r\n        let todolistTasks = tasks[todolistId];\r\n        // найдём нужную таску:\r\n        let task = todolistTasks.find(t => t.id === id);\r\n        //изменим таску, если она нашлась\r\n        if (task) {\r\n            task.isDone = isDone;\r\n            // засетаем в стейт копию объекта, чтобы React отреагировал перерисовкой\r\n            setTasks({...tasks});\r\n        }\r\n    }\r\n\r\n    function changeTaskTitle(id: string, newTitle: string, todolistId: string) {\r\n        //достанем нужный массив по todolistId:\r\n        let todolistTasks = tasks[todolistId];\r\n        // найдём нужную таску:\r\n        let task = todolistTasks.find(t => t.id === id);\r\n        //изменим таску, если она нашлась\r\n        if (task) {\r\n            task.title = newTitle;\r\n            // засетаем в стейт копию объекта, чтобы React отреагировал перерисовкой\r\n            setTasks({...tasks});\r\n        }\r\n    }\r\n\r\n\r\n    function changeFilter(value: FilterValuesType, todolistId: string) {\r\n        let todolist = todolists.find(tl => tl.id === todolistId);\r\n        if (todolist) {\r\n            todolist.filter = value;\r\n            setTodolists([...todolists])\r\n        }\r\n    }\r\n\r\n    function removeTodolist(id: string) {\r\n        // засунем в стейт список тудулистов, id которых не равны тому, который нужно выкинуть\r\n        setTodolists(todolists.filter(tl => tl.id != id));\r\n        // удалим таски для этого тудулиста из второго стейта, где мы храним отдельно таски\r\n        delete tasks[id]; // удаляем св-во из объекта... значением которого являлся массив тасок\r\n        // засетаем в стейт копию объекта, чтобы React отреагировал перерисовкой\r\n        setTasks({...tasks});\r\n    }\r\n\r\n    function changeTodolistTitle(id: string, title: string) {\r\n        // найдём нужный todolist\r\n        const todolist = todolists.find(tl => tl.id === id);\r\n        if (todolist) {\r\n            // если нашёлся - изменим ему заголовок\r\n            todolist.title = title;\r\n            setTodolists([...todolists]);\r\n        }\r\n    }\r\n\r\n    function addTodolist(title: string) {\r\n        let newTodolistId = v1();\r\n        let newTodolist: TodolistType = {id: newTodolistId, title: title, filter: 'all'};\r\n        setTodolists([newTodolist, ...todolists]);\r\n        setTasks({\r\n            ...tasks,\r\n            [newTodolistId]: []\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <AppBar position=\"static\">\r\n                <Toolbar>\r\n                    <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\">\r\n                        <Menu/>\r\n                    </IconButton>\r\n                    <Typography variant=\"h6\">\r\n                        News\r\n                    </Typography>\r\n                    <Button color=\"inherit\">Login</Button>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Container fixed>\r\n                <Grid container style={{padding: \"20px\"}}>\r\n                    <AddItemForm addItem={addTodolist}/>\r\n                </Grid>\r\n                <Grid container spacing={3}>\r\n                    {\r\n                        todolists.map(tl => {\r\n                            let allTodolistTasks = tasks[tl.id];\r\n                            let tasksForTodolist = allTodolistTasks;\r\n\r\n                            if (tl.filter === \"active\") {\r\n                                tasksForTodolist = allTodolistTasks.filter(t => t.isDone === false);\r\n                            }\r\n                            if (tl.filter === \"completed\") {\r\n                                tasksForTodolist = allTodolistTasks.filter(t => t.isDone === true);\r\n                            }\r\n\r\n                            return <Grid item>\r\n                                <Paper style={{padding: \"10px\"}}>\r\n                                    <Todolist\r\n                                        key={tl.id}\r\n                                        id={tl.id}\r\n                                        title={tl.title}\r\n                                        tasks={tasksForTodolist}\r\n                                        removeTask={removeTask}\r\n                                        changeFilter={changeFilter}\r\n                                        addTask={addTask}\r\n                                        changeTaskStatus={changeStatus}\r\n                                        filter={tl.filter}\r\n                                        removeTodolist={removeTodolist}\r\n                                        changeTaskTitle={changeTaskTitle}\r\n                                        changeTodolistTitle={changeTodolistTitle}\r\n                                    />\r\n                                </Paper>\r\n                            </Grid>\r\n                        })\r\n                    }\r\n                </Grid>\r\n            </Container>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}