{"ast":null,"code":"import { v1 } from 'uuid';\nexport const tasksReducer = (state, action) => {\n  switch (action.type) {\n    case 'REMOVE-TASK':\n      {\n        const stateCopy = { ...state\n        };\n        const tasks = state[action.todolistId];\n        const filteredTasks = tasks.filter(t => t.id !== action.taskId);\n        stateCopy[action.todolistId] = filteredTasks;\n        return stateCopy;\n      }\n\n    case 'ADD-TASK':\n      {\n        const stateCopy = { ...state\n        };\n        const tasks = stateCopy[action.todolistId];\n        const newTask = {\n          id: v1(),\n          title: action.title,\n          isDone: false\n        };\n        const newTasks = [newTask, ...tasks];\n        stateCopy[action.todolistId] = newTasks;\n        return stateCopy;\n      }\n\n    case 'CHANGE-TASK-STATUS':\n      {\n        const stateCopy = { ...state\n        };\n        let tasks = stateCopy[action.todolistId]; // найдём нужную таску:\n\n        let task = tasks.find(t => t.id === action.taskId); //изменим таску, если она нашлась\n\n        if (task) {\n          task.isDone = action.isDone;\n        }\n\n        return stateCopy;\n      }\n\n    case 'CHANGE-TASK-TITLE':\n      {\n        const stateCopy = { ...state\n        };\n        let tasks = stateCopy[action.todolistId]; // найдём нужную таску:\n\n        let task = tasks.find(t => t.id === action.taskId); //изменим таску, если она нашлась\n\n        if (task) {\n          task.title = action.title;\n        }\n\n        return stateCopy;\n      }\n\n    case 'ADD-TODOLIST':\n      {\n        const stateCopy = { ...state\n        };\n        stateCopy[action.todolistId] = [];\n        return stateCopy;\n      }\n\n    case 'REMOVE-TODOLIST':\n      {\n        const stateCopy = { ...state\n        };\n        delete stateCopy[action.id];\n        return stateCopy;\n      }\n\n    default:\n      return state;\n  }\n};\nexport const removeTaskAC = (taskId, todolistId) => {\n  return {\n    type: 'REMOVE-TASK',\n    todolistId,\n    taskId\n  };\n};\nexport const addTaskAC = (title, todolistId) => {\n  return {\n    type: 'ADD-TASK',\n    title,\n    todolistId\n  };\n};\nexport const changeTaskStatusAC = (taskId, isDone, todolistId) => {\n  return {\n    type: 'CHANGE-TASK-STATUS',\n    isDone,\n    todolistId,\n    taskId\n  };\n};\nexport const changeTaskTitleAC = (taskId, title, todolistId) => {\n  return {\n    type: 'CHANGE-TASK-TITLE',\n    title,\n    todolistId,\n    taskId\n  };\n};","map":{"version":3,"sources":["D:/IT-incubator/TODO среда переход на редакс/src/state/tasks-reducer.ts"],"names":["v1","tasksReducer","state","action","type","stateCopy","tasks","todolistId","filteredTasks","filter","t","id","taskId","newTask","title","isDone","newTasks","task","find","removeTaskAC","addTaskAC","changeTaskStatusAC","changeTaskTitleAC"],"mappings":"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","sourcesContent":["import {FilterValuesType, TasksStateType, TodolistType} from '../App';\r\nimport {v1} from 'uuid';\r\nimport {AddTodolistActionType, RemoveTodolistActionType} from './todolists-reducer';\r\n\r\nexport type RemoveTaskActionType = {\r\n    type: 'REMOVE-TASK'\r\n    todolistId: string\r\n    taskId: string\r\n}\r\nexport type AddTaskActionType = {\r\n    type: 'ADD-TASK'\r\n    title: string\r\n    todolistId: string\r\n}\r\nexport type ChangeTaskStatusActionType = {\r\n    type: 'CHANGE-TASK-STATUS'\r\n    taskId: string\r\n    todolistId: string\r\n    isDone: boolean\r\n}\r\nexport type ChangeTaskTitleActionType = {\r\n    type: 'CHANGE-TASK-TITLE'\r\n    taskId: string\r\n    todolistId: string\r\n    title: string\r\n}\r\n\r\ntype ActionsType = RemoveTaskActionType | AddTaskActionType\r\n | ChangeTaskStatusActionType | ChangeTaskTitleActionType\r\n    | AddTodolistActionType | RemoveTodolistActionType;\r\n\r\nexport const tasksReducer = (state: TasksStateType, action: ActionsType): TasksStateType => {\r\n    switch (action.type) {\r\n        case 'REMOVE-TASK': {\r\n            const stateCopy = {...state};\r\n            const tasks = state[action.todolistId];\r\n            const filteredTasks = tasks.filter(t => t.id !== action.taskId)\r\n            stateCopy[action.todolistId] = filteredTasks;\r\n            return stateCopy;\r\n        }\r\n        case 'ADD-TASK': {\r\n            const stateCopy = {...state};\r\n            const tasks = stateCopy[action.todolistId];\r\n            const newTask = {id: v1(), title: action.title, isDone: false};\r\n            const newTasks = [newTask, ...tasks];\r\n            stateCopy[action.todolistId] = newTasks;\r\n            return stateCopy;\r\n        }\r\n        case 'CHANGE-TASK-STATUS': {\r\n            const stateCopy = {...state};\r\n\r\n            let tasks = stateCopy[action.todolistId];\r\n            // найдём нужную таску:\r\n            let task = tasks.find(t => t.id === action.taskId);\r\n            //изменим таску, если она нашлась\r\n            if (task) {\r\n                task.isDone = action.isDone;\r\n            }\r\n            return stateCopy;\r\n        }\r\n        case 'CHANGE-TASK-TITLE': {\r\n            const stateCopy = {...state};\r\n\r\n            let tasks = stateCopy[action.todolistId];\r\n            // найдём нужную таску:\r\n            let task = tasks.find(t => t.id === action.taskId);\r\n            //изменим таску, если она нашлась\r\n            if (task) {\r\n                task.title = action.title;\r\n            }\r\n            return stateCopy;\r\n        }\r\n        case 'ADD-TODOLIST': {\r\n            const stateCopy = {...state};\r\n\r\n            stateCopy[action.todolistId] = [];\r\n\r\n            return stateCopy;\r\n        }\r\n        case 'REMOVE-TODOLIST': {\r\n            const stateCopy = {...state};\r\n            delete stateCopy[action.id]\r\n            return stateCopy;\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const removeTaskAC = (taskId: string, todolistId: string): RemoveTaskActionType => {\r\n    return { type: 'REMOVE-TASK', todolistId, taskId }\r\n}\r\nexport const addTaskAC = (title: string, todolistId: string): AddTaskActionType => {\r\n    return { type: 'ADD-TASK', title, todolistId}\r\n}\r\nexport const changeTaskStatusAC = (taskId: string,\r\n                                   isDone: boolean,\r\n                                   todolistId: string): ChangeTaskStatusActionType => {\r\n    return { type: 'CHANGE-TASK-STATUS', isDone, todolistId, taskId}\r\n}\r\nexport const changeTaskTitleAC = (taskId: string,\r\n                                   title: string,\r\n                                   todolistId: string): ChangeTaskTitleActionType => {\r\n    return { type: 'CHANGE-TASK-TITLE', title, todolistId, taskId}\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}